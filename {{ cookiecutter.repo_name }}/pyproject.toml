[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = {{ cookiecutter.module_name|tojson }}
version = "0.0.1"
description = {{ cookiecutter.description|tojson }}
authors = [
  { name = {{ cookiecutter.author_name|tojson }} },
]
{% if cookiecutter.open_source_license != 'No license file' %}license = { file = "LICENSE" }{% endif %}
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    {% if cookiecutter.open_source_license == 'MIT' %}"License :: OSI Approved :: MIT License"{% elif cookiecutter.open_source_license == 'BSD-3-Clause' %}"License :: OSI Approved :: BSD License"{% endif %}
]
requires-python = "~={{ cookiecutter.python_version_number }}"

{% if cookiecutter.dependency_file == 'pyproject.toml' %}
dependencies = [
    "black",
    "flake8",
    "isort",
    "pip",
    "python-dotenv",
    "uv",
    {% if cookiecutter.pydata_packages == 'basic' %}
        "ipython",
        "jupyterlab",
        "matplotlib",
        "notebook",
        "numpy",
        "pandas",
        "scikit-learn",
    {% endif %}
    {% if cookiecutter.include_code_scaffold == 'Yes' %}
        "typer",
        "loguru",
        "tqdm",
    {% endif %}
]

[dependency-groups]
dev = [
    "jupyterlab>=4.3.5",
    "mkdocs>=1.6.1",
    "optuna-dashboard>=0.17.0",
    "tqdm>=4.67.1",
]
{% endif %}



[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.ruff.lint.isort]
known_first_party = ["{{ cookiecutter.module_name }}"]
force_sort_within_sections = true

