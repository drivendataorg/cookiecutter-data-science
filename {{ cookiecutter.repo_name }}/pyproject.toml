[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = {{ cookiecutter.project_name|tojson }}
version = "0.0.1"
description = {{ cookiecutter.description|tojson }}
authors = [
  { name = {{ cookiecutter.author_name|tojson }} },
]
{% if cookiecutter.open_source_license != 'No license file' %}license = { file = "LICENSE" }{% endif %}
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    {% if cookiecutter.open_source_license == 'MIT' %}"License :: OSI Approved :: MIT License"{% elif cookiecutter.open_source_license == 'BSD-3-Clause' %}"License :: OSI Approved :: BSD License"{% endif %}
]
requires-python = "~={{ cookiecutter.python_version_number }}"
{% if cookiecutter.linting_and_formatting == 'flake8+black+isort' %}
[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["src"]
force_sort_within_sections = true
{% endif %}
{% if cookiecutter.linting_and_formatting == 'ruff' %}

[tool.ruff]
line-length = 120
src = ["src"]
include = ["pyproject.toml", "src/**/*.py"]
fix = true

[tool.ruff.lint]
extend-select = ["I"]  # Add import sorting

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-sort-within-sections = true
{% endif %}

[tool.uv]
package = true

[dependency-groups]
dev = [
    "pytest",
    "pre-commit",
    "deptry",
    "pytest-cov",
    %if ccds.linting_and_formatting == "ruff"%
    "tox-uv",
    {% endif %}
]